#version 450

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normals;
layout(location = 2) in vec2 uv_coord;
layout(location = 3) in vec3 tangent;
uniform vec4 color;
uniform mat4 model_matrix;
uniform mat4 view_matrix;// = mat4(
			      //0, 0, 1, 0,
			      //0, 1, 0, 0,
			      //1, 0, 0, 0,
			      //0, 0, -10, 1);
uniform mat4 projection_matrix; // = mat4(
			      //5.00000, 0.00000, 0.00000, 0.00000,
			      //0.00000, 5.00000, 0.00000, 0.00000,
			      //0.00000, 0.00000, -1.00020, -1.00000,
			      //0.00000, 0.00000, -10.00100, 0.00000);

struct light
{
    vec3 position;
    vec3 color;
    bool used;
};

uniform light lights[16];

out vec4 vColor;
out vec3 light_dir[16];
out vec4 light_color[16];
out vec3 normal;
out vec2 tex_coord;
void main() {
    gl_Position = projection_matrix * view_matrix * model_matrix * vec4(position, 1.0);
    vColor = color;
    for (int i = 0; i < 16; i++)
    {
        light_dir[i] = normalize(lights[i].position - position);
        light_color[i] = vec4(lights[i].color, 1);
    }
    normal = normals;
    tex_coord = uv_coord;
}

