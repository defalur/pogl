#version 450

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normals;
layout(location = 2) in vec2 uv_coord;
layout(location = 3) in vec3 tangent;
uniform vec4 color;
uniform mat4 model_view_matrix;// = mat4(
			      //0, 0, 1, 0,
			      //0, 1, 0, 0,
			      //1, 0, 0, 0,
			      //0, 0, -10, 1);
uniform mat4 projection_matrix; // = mat4(
			      //5.00000, 0.00000, 0.00000, 0.00000,
			      //0.00000, 5.00000, 0.00000, 0.00000,
			      //0.00000, 0.00000, -1.00020, -1.00000,
			      //0.00000, 0.00000, -10.00100, 0.00000);

vec3 light_position = vec3(5.0, 5.0, 5.0);

out vec4 vColor;
out vec3 light_dir;
out vec3 normal;
out vec2 tex_coord;
void main() {
    gl_Position = projection_matrix * model_view_matrix * vec4(position, 1.0);
    vColor = color;
    light_dir = normalize(light_position - position);
    normal = normals;
    tex_coord = uv_coord;
}

